v1.2.6
- JSONEnum for JSONDocArray (IJSONDocArrayEnumerator)
- jsonV: support drag and drop files
- jsonV: support multiple files
- jsonV: tabular view support reordering columns, context menu with remove, sort

v1.2.5
- IJSONDocument.v0 function for direct variant access
- newJSON, newJSONDocArray functions
- JSONDocArray(Variant) overload
- IJSONDocArray.Parse
- parsing performance improvements

v1.2.4
- UseIJSONDocArray to enable automatic use of IJSONDocArray instances on a "[{" sequence
- isJSON, isJSONArray, isJSONDocArray functions
- jsonV: Ctrl+T on array of documents to show tabular view

v1.2.3
- JSONEnumSorted: IJSONEnumerableSorted using internal keys sort order

v1.2.2
- jsonV: detect file change on app activate
- jsonV: Ctrl+R to alpha-sort children
- jsonV: support UTF-8 without byte-order-mark
- jsonSet.pas

v1.2.1
- catch stray "}" before "]" or "]" before "}"
- jsonV: show multi-line text data as nodes
- jsonV: Ctrl+F: Find, F3: Search next, Shift+F3: Search previous
- IJSONArray property Count, AsString (works better for the debugger)

v1.2.0
  ### ATTENTION!!! breaking change: ###
- Parse is now a procedure instead of a function, to enable it as the writer for the AsString property while keeping the same number of virtual methods in the IJSONDocument interface.
- conditional define JSONDOC_P2 to combine JSONDOC_JSON_LOOSE and JSONDOC_JSON_PASCAL_STRINGS

v1.1.8
- revised parsing arrays of combined numerical types

v1.1.7
- fixed issue with resuing a TJSONDocArray instance

v1.1.6
- gracefully handle VType=varUnknown with VUnknown=nil

v1.1.5
- fail on unexpected data after root document

v1.1.4
- reduced uses clauses to bare minimum

v1.1.3
- JSONDOC_JSON_LOOSE define to allow missing colons or comma's
- JSONDOC_JSON_PASCAL_STRINGS define to allow pascal-style string literals
- IJSONDocArray.GetJSON
- TJSONArray now does IJSONEnumerable

v1.1.2
- support '\xXX' string escape sequence
- don't escape '/' in strings

v1.1.1
- switch from OleVariant to Variant
- absorbed jsonTS.pas as conditional define JSONDOC_THREADSAFE
- thread-un-safe also skips on locking when reference counting (should improve performance)
- some internal revision to avoid VarCopyDeep where possible (should improve performance)
- IJSONArray interface, ja function, JSON_UseIJSONArray global

v1.1.0
  ### ATTENTION!!! breaking change: ###
- JSON function: use '{' key suffix to start embedded document (instead of value '[')
- IJSONDocument.ToString re-done using IJSONEnumerator
- IJSONDocWithReUse to fix re-using pre-allocated keys
- jsonV: now supports array as element in array

v1.0.5
- IJSONDocument.Delete

v1.0.4
- JsonEnum: return 'empty' enumerator on nil/Null

v1.0.3
- jsonV: improved variant type display
- jsonV: Ctrl+Shift+C to copy value only
- jsonDoc: fixed issue with int64 arrays

v1.0.2
- jsonV: support array as root
- jsonDoc: const OleVariant arguments
- jsonEnum: with Data=nil 'fail silently' (EOF=true Next=false)

v1.0.1
- IJSONEnumerator
- IJSONDocArrayBuilder

v1.0.0
